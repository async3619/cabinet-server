// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
  provider   = "node node_modules/prisma-nestjs-graphql"
  output     = "../src/generated/graphql"
  emitSingle = true

  graphqlScalars_BigInt_name      = "GraphQLBigInt"
  graphqlScalars_BigInt_specifier = "graphql-scalars"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Board {
  id String @id

  code        String
  title       String
  description String
  namespace   String
  provider    String

  threads Thread[]
  posts   Post[]
}

model Thread {
  id String @id

  no         Int
  author     String
  title      String?
  content    String?
  createdAt  DateTime
  bumpedAt   DateTime?
  isArchived Boolean   @default(false)

  watchers       Watcher[]
  attachments    Attachment[]
  posts          Post[]
  watcherThreads WatcherThread[]

  board   Board  @relation(fields: [boardId], references: [id])
  boardId String
}

model Post {
  id String @id

  no        Int
  author    String
  title     String?
  content   String?
  createdAt DateTime

  attachments Attachment[]

  thread   Thread? @relation(fields: [threadId], references: [id])
  threadId String?

  board   Board?  @relation(fields: [boardId], references: [id])
  boardId String?
}

model Attachment {
  id   String @id
  uuid String @unique @default(uuid())

  name      String
  width     Int
  height    Int
  size      Int?
  extension String
  mime      String?
  hash      String?
  createdAt DateTime
  timestamp BigInt?
  fileUri   String?

  thumbnailWidth   Int?
  thumbnailHeight  Int?
  thumbnailFileUri String?

  threads  Thread[]
  posts    Post[]
  watchers Watcher[]
}

model Watcher {
  id   Int    @id @default(autoincrement())
  name String
  type String

  threads         Thread[]
  attachments     Attachment[]
  watcherThreads  WatcherThread[]
  excludedThreads ExcludedThread[]
}

model WatcherThread {
  id         Int     @id @default(autoincrement())
  url        String
  isArchived Boolean @default(false)

  watcher   Watcher @relation(fields: [watcherId], references: [id])
  watcherId Int

  thread   Thread? @relation(fields: [threadId], references: [id])
  threadId String?
}

model ExcludedThread {
  id       Int    @id @default(autoincrement())
  threadId String

  watcher   Watcher @relation(fields: [watcherId], references: [id])
  watcherId Int
}

model Statistic {
  id Int @id @default(autoincrement())

  threadCount     Int
  postCount       Int
  attachmentCount Int
  totalSize       BigInt

  createdAt DateTime @default(now())
}
